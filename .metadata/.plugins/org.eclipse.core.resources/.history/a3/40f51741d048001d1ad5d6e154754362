/*
 * informes.h
 *
 *  Created on: 6 oct. 2022
 *      Author: cuerpos
 */

#ifndef INFORMES_H_
#define INFORMES_H_
#include "vehiculo.h"
#include "tipo.h"
/// @brief showOneType3Doors
///
/// @param arrayVehicle				Array de vehiculos dados de alta.
/// @param arrayType				Array de vehiculos dados de alta.
/// @param len						Tamanio de ARRAY de vehiculos.
/// @return	           				Retorno, OK(1) en caso de haber funcionado correctamente. Retorno, ERROR(-1) en caso contrario.
int showOneType3Doors(sVehicle arrayVehicle[], sType arrayType[], int len) ;
/// @brief showOneType5Doors
///
/// @param arrayVehicle				Array de vehiculos dados de alta.
/// @param arrayType				ARRAY de tipos de vehiculo harcodeado.
/// @param len						Tamanio de ARRAY de vehiculos.
/// @return							Retorno, OK(1) en caso de haber funcionado correctamente. Retorno, ERROR(-1) en caso contrario.
int showOneType5Doors(sVehicle arrayVehicle[], sType arrayType[], int len);
/// @brief showOneTypeTruck
///
/// @param arrayVehicle
/// @param arrayType
/// @param len
/// @return							Retorno, OK(1) en caso de haber funcionado correctamente. Retorno, ERROR(-1) en caso contrario.
int showOneTypeTruck(sVehicle arrayVehicle[], sType arrayType[], int len) ;
/// @brief showTypes
///
/// @param arrayVehicle
/// @param arrayType
/// @param len
/// @return							Retorno, OK(1) en caso de haber funcionado correctamente. Retorno, ERROR(-1) en caso contrario.
int showTypes(sVehicle arrayVehicle[], sType arrayType[], int len);
/// @brief askDate
///
/// @return
sDate askDate();
/// @brief showSheetPerDate
///
/// @param arraySheet				Array de hojas de servicio dada de alta.
/// @param lenSheet					Tamanio de ARRAY de hojas de servicio.
/// @param arrayVehicle				Array de vehiculos dados de alta.
/// @param len						Tamanio de ARRAY de vehiculos.
/// @param arrayType				ARRAY de tipos de vehiculo harcodeado.
/// @param lenType					Tamanio de ARRAY de tipos de vehiculo harcodeado.
/// @return							Retorno, OK(1) en caso de haber funcionado correctamente. Retorno, ERROR(-1) en caso contrario.
int showSheetPerDate(sSheet arraySheet[], int lenSheet, sVehicle arrayVehicle[], int len, sType arrayType[], int lenType);
/// @brief loadDataSheetIdReports
///
/// @return
int loadDataSheetIdReports();
/// @brief
///
/// @param arraySheet
/// @param arrayVehicle
/// @param lenSheet
/// @param len
/// @param arrayType
/// @param lenType
/// @return							Retorno, OK(1) en caso de haber funcionado correctamente. Retorno, ERROR(-1) en caso contrario.
int acumulatorPerVehicle(sSheet arraySheet[], sVehicle arrayVehicle[],
		int lenSheet, int len, sType arrayType[], int lenType );
/// @brief
///
/// @param arrayType
/// @return
int askType(sType arrayType[]);
/// @brief
///
/// @param arraySheet
/// @param arrayType
/// @param arrayVehicle
/// @param lenSheet
/// @param lenType
/// @param len
/// @return						Retorno, OK(1) en caso de haber funcionado correctamente. Retorno, ERROR(-1) en caso contrario.
int pricePerDateOneType(sSheet arraySheet[], sType arrayType[], sVehicle arrayVehicle[], int lenSheet,
		int lenType, int len);
/// @brief
///
/// @param arraySheet
/// @param arrayVehicle
/// @param arrayType
/// @param len
/// @param lenSheet
/// @param lenType
void reportsMenu(sSheet arraySheet[], sVehicle arrayVehicle[], sType arrayType[],
		int len, int lenSheet, int lenType);
#endif /* INFORMES_H_ */
